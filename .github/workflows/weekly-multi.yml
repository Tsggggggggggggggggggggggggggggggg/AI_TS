name: AI Weekly Digest (Multi-Theme)

on:
  schedule:
    - cron: '0 9 * * 1'            # 每周一 09:00 UTC 自动运行
  workflow_dispatch:               # ⬅️ 这个决定能不能“手动运行”
    inputs:
      theme:
        description: 'Theme to run (ai / business / psych / design / all)'
        required: false
        default: 'all'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        theme: ${{ fromJSON(github.event.inputs.theme == 'all' && '["ai","business","psych","design"]' || format('["{0}"]', github.event.inputs.theme)) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run script for ${{ matrix.theme }}
        env:
          THEME: ${{ matrix.theme }}
        run: |
          python fetch_and_summarize.py

      - name: Upload artifact (${{ matrix.theme }})
        uses: actions/upload-artifact@v4
        with:
          name: weekly_digest_${{ matrix.theme }}
          path: output/weekly_digest_${{ matrix.theme }}*.md   # ⬅️ 打包中/英/双语三份

  merge:
    name: Merge all themes to one bilingual report
    runs-on: ubuntu-latest
    needs: build                    # 等四个主题都跑完
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: merged_inputs
          pattern: weekly_digest_*  # 下载所有主题产物
          merge-multiple: true

      - name: Merge to one bilingual report
        shell: bash
        run: |
          python <<'PY'
          import os, re, glob, datetime
          from datetime import timezone, timedelta

          os.makedirs("output", exist_ok=True)

          ORDER = ["ai","business","psych","design"]  # 合并顺序，可调整

          def pick_file(theme):
              # 优先双语，其次中文，再次英文
              for suf in ["_bilingual.md","_zh.md","_en.md"]:
                  cand = glob.glob(f"merged_inputs/**/weekly_digest_{theme}{suf}", recursive=True)
                  if cand:
                      return sorted(cand)[-1]
              return None

          def fmt(dt):
              bj = dt.astimezone(datetime.timezone(datetime.timedelta(hours=8)))
              return bj.strftime("%Y-%m-%d %H:%M")

          end = datetime.datetime.now(datetime.timezone.utc)
          start = end - datetime.timedelta(days=7)

          parts = [f"# 多主题一周总览 · {fmt(start)} ~ {fmt(end)}\n\n> 含 AI / 商业 / 心理 / 设计 · 每条 1 句摘要 + 1 句洞察（中英双语）\n"]

          for theme in ORDER:
              f = pick_file(theme)
              if not f:
                  continue
              with open(f, "r", encoding="utf-8") as fh:
                  txt = fh.read().strip()
              lines = txt.splitlines()
              if lines and lines[0].startswith("# "):
                  lines[0] = f"## {theme.upper()} · Bilingual"
              parts.append("\n".join(lines))
              parts.append("\n---\n")

          merged = "\n".join(parts).strip() + "\n\n*Generated by AI Weekly Digest via GitHub Actions*"
          out = "output/weekly_digest_ALL_bilingual.md"
          with open(out, "w", encoding="utf-8") as fw:
              fw.write(merged)
          print(f"Merged -> {out}")
          PY

      - name: Upload merged report
        uses: actions/upload-artifact@v4
        with:
          name: weekly_digest_ALL
          path: output/weekly_digest_ALL_bilingual.md
